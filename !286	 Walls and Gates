You are given a m x n 2D grid initialized with these three possible values.

-1 - A wall or an obstacle.
0 - A gate.
INF - Infinity means an empty room. We use the value 231 - 1 = 2147483647 to represent INF as you may assume that the distance to a gate is less than 2147483647.
Fill each empty room with the distance to its nearest gate. If it is impossible to reach a gate, it should be filled with INF.

Example:

Given the 2D grid:

INF  -1  0  INF
INF INF INF  -1
INF  -1 INF  -1
  0  -1 INF INF
1
2
3
4
After running your function, the 2D grid should be:

  3  -1   0   1
  2   2   1  -1
  1  -1   2  -1
  0  -1   3   4
  
  Website:https://dotnetfiddle.net/
  
  
  using System;
using System.Collections.Generic;
public class Program
{
	public static void WallsAndGates(int[][] rooms) 
	{
		return;
	}
	public static void Main()
	{
		int[][] rooms = new int[4][]{new int[4]{3,-1,0,1},new int[4]{2,2,1,-1},new int[4]{1,-1,2,-1},new int[4]{0,-1,3,4}};
		WallsAndGates(rooms);
		foreach(int[] interval in rooms)
			foreach(int i in interval)
				Console.WriteLine(i);
	}
}
