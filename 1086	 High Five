Question:
Given a list of scores of different students, return the average score of each student's top five scores in the order of each student's id.

Each entry items[i] has items[i][0] the student's id, and items[i][1] the student's score.  The average score is calculated using integer division.

 

Example 1:

Input: [[1,91],[1,92],[2,93],[2,97],[1,60],[2,77],[1,65],[1,87],[1,100],[2,100],[2,76]]
Output: [[1,87],[2,88]]
Explanation: 
The average of the student with id = 1 is 87.
The average of the student with id = 2 is 88.6. But with integer division their average converts to 88.
 

Note:

1.1 <= items.length <= 1000
2.items[i].length == 2
3.The IDs of the students is between 1 to 1000
4.The score of the students is between 1 to 100
5.For each student, there are at least 5 scores

Website:https://repl.it/languages/csharp

using System;
using System.Text;
using System.Collections.Generic;
using System.Linq;
class MainClass {
  public static void Main (string[] args) {
      int[,] A = new int[11, 2] {{1,91},{1,92},{2,93},{2,97},{1,60},{2,77},{1,65},{1,87},{1,100},{2,100},{2,76} }; 
      Dictionary<int,List<int>> d = new Dictionary<int,List<int>>();
      for(int i = 0;i<A.GetLength(0);i++){
        if(!d.ContainsKey(A[i,0]))
        {
          d.Add(A[i,0],new List<int>());
        }
        d[A[i,0]].Add(A[i,1]);
      }
      int[,] res = new int[d.Count,2];
      int index = 0;
      foreach(KeyValuePair<int,List<int>> pair in d)
      {
        res[index,0] =pair.Key;
        pair.Value.Sort();
        pair.Value.Reverse();
        int sum = 0;
        for(int i = 0;i<5;i++)
        {
          sum+=pair.Value[i];
        }
        res[index++,1] = sum/5;
      }
      Console.WriteLine(res[1,1]);
  }

}
