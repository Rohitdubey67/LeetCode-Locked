In some array arr, the values were in arithmetic progression: the values arr[i+1] - arr[i] are all equal for every 0 <= i < arr.length - 1.

Then, a value from arr was removed that was not the first or last value in the array.

Return the removed value.

 

Example 1:

Input: arr = [5,7,11,13]
Output: 9
Explanation: The previous array was [5,7,9,11,13].
Example 2:

Input: arr = [15,13,12]
Output: 14
Explanation: The previous array was [15,14,13,12].
 

Constraints:

3 <= arr.length <= 1000
0 <= arr[i] <= 10^5

Website:https://repl.it/languages/csharp

using System;

class MainClass {
  public static void Main (string[] args) {
    int[] arr = new int[3]{15,13,12};
    Console.WriteLine (MissingNumber(arr));
  }
  public static int MissingNumber(int[] arr)
  {
    Array.Sort(arr);
    int dist = Int32.MaxValue;
    for(int i = 0;i<arr.Length-1;i++)
    {
      dist = Math.Min(dist,arr[i+1]-arr[i]);
    }
    for(int i = 0;i<arr.Length-1;i++)
    {
      if(arr[i+1]-arr[i]>dist)return arr[i] + dist;
    }
    return -1;
  }
}
