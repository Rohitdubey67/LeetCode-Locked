Given a sorted integer array nums, where the range of elements are in the inclusive range [lower, upper], return its missing ranges.

Example:

Input: nums = [0, 1, 3, 50, 75], lower = 0 and upper = 99,
Output: ["2", "4->49", "51->74", "76->99"]

Website:https://repl.it/languages/csharp

using System;
using System.Collections.Generic;
using System.Text;
class MainClass {
  public static IList<string> FindMissingRanges(int[] nums, int lower,int upper)
  {
    IList<string> res = new List<string>();
    int index = 0;
    for(int i = lower;i<=upper;i++)
    {
      if(index<nums.Length){
        if(i==nums[index]){
          index++;
          continue;
        }
        else
        {
          if(nums[index]-i>1)res.Add(i.ToString()+"->"+(nums[index]-1).ToString());
          else res.Add(i.ToString());
          i = nums[index]-1;
        }
      }else{
        if(i!=upper){
          res.Add(i.ToString()+"->"+upper.ToString());
        }else{
          res.Add(i.ToString());
        }
        break;
      }
    }
    return res;
  }
  public static void Main (string[] args){
    int[] nums = new int[5]{0,1,3,50,75};
    IList<string> res = FindMissingRanges(nums,0,99);
    foreach(string s in res)Console.WriteLine(s);
  }
}
