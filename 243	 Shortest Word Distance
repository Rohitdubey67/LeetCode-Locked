Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

For example,
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Given word1 = “coding”, word2 = “practice”, return 3.
Given word1 = "makes", word2 = "coding", return 1.

Note:
You may assume that word1 does not equal to word2, and word1 and word2 are both in the list.

Website:https://dotnetfiddle.net/

using System;
using System.Collections.Generic;
public class Program
{
	public static int ShortestDistance(string[] words, string word1, string word2)
	{
		int first = -1,second = -1,res = Int32.MaxValue;
		for(int i = 0;i<words.Length;i++)
		{
			if(words[i]==word1)
			{
				first = i;
				if(second>-1)res = Math.Min(res,Math.Abs(first-second));
			}
			else if(words[i]==word2)
			{
				second = i;
				if(first>-1)res = Math.Min(res,Math.Abs(first-second));
			}
		}
		return res;
	}
	public static void Main()
	{
		string[] words = new string[5] {"practice", "makes", "perfect", "coding", "makes"};
		Console.WriteLine(ShortestDistance(words,"makes","coding"));
	}
}

