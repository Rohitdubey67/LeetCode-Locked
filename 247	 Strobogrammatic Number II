A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).

Find all strobogrammatic numbers that are of length = n. 

For example,
Given n = 2, return ["11","69","88","96"].

Hint:

Try to use recursion and notice that it should recurse with n - 2 instead of n - 1.

Website:https://dotnetfiddle.net/

using System;
using System.Collections.Generic;					
public class Program
{
	public static void Main()
	{
		foreach(string s in FindStrobogrammatic(2))Console.WriteLine(s);
	}
	public static IList<string> FindStrobogrammatic(int n)
	{
		return Helper(n,n);
	}
	public static IList<string> Helper(int n,int m)
	{
		if (n == 0) return new List<String>(){""};
        if (n == 1) return new List<String>(){"0","1","8"};
        IList<String> list = Helper(n - 2, m);
        IList<String> res = new List<String>();
        foreach(string str in list)
		{
            if (n != m) res.Add("0" + str + "0");
            res.Add("1" + str + "1");
            res.Add("6" + str + "9");
            res.Add("8" + str + "8");
            res.Add("9" + str + "6");
        }
        return res;
	}
}



