Given a binary tree, count the number of uni-value subtrees.

A Uni-value subtree means all nodes of the subtree have the same value.

For example:
Given binary tree,

              5
             / \
            1   5
           / \   \
          5   5   5
 

return 4

Website:https://rextester.com/

//Rextester.Program.Main is the entry point for your code. Don't change it.
//Compiler version 4.0.30319.17929 for Microsoft (R) .NET Framework 4.5

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

namespace Rextester
{
    public class Program
    {
        public class TreeNode{
            public int val;
            public TreeNode left;
            public TreeNode right;
            public TreeNode(int x)
            {
              val = x;
            }
        }
        
        public static void Main(string[] args)
        {
            TreeNode root = new TreeNode(5);
            root.left = new TreeNode(1);
            root.right = new TreeNode(5);
            root.left.left = new TreeNode(5);
            root.left.right = new TreeNode(5);
            root.right.right = new TreeNode(5);
            Console.WriteLine(CountUnivalSubtrees(root));
        }
        public static int CountUnivalSubtrees(TreeNode root)
        {
            int res = 0;
            Helper(root,root.val,ref res);
            return res;
        }
        public static bool Helper(TreeNode node,int prev, ref int res)
        {
            if(node==null)return true;
            bool left = Helper(node.left,node.val,ref res);
            bool right = Helper(node.right,node.val,ref res);
            if(left&&right)res++;
            return (node.val==prev)&&left&&right;
        }
    }
}
