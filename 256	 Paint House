There are a row of n houses, each house can be painted with one of the three colors: red, blue or green. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.

The cost of painting each house with a certain color is represented by a n x 3 cost matrix. For example, costs[0][0] is the cost of painting house 0 with color red; costs[1][2] is the cost of painting house 1 with color green, and so onâ€¦ Find the minimum cost to paint all houses.

Note: All costs are positive integers.

Example:

Input: [[17,2,17],[16,16,5],[14,3,19]]
Output: 10
Explanation: Paint house 0 into blue, paint house 1 into green, paint house 2 into blue.
             Minimum cost: 2 + 5 + 3 = 10.
             
             
Website:https://dotnetfiddle.net/


using System;
					
public class Program
{
	public static int MinCost(int[][] costs)
	{
		int length = costs.Length;
		if(length<1)return 0;
		int[][] dp = costs;
		for(int i = 1;i<length;i++)
		{
			dp[i][0] += Math.Min(dp[i-1][1],dp[i-1][2]);
			dp[i][1] += Math.Min(dp[i-1][0],dp[i-1][2]);
			dp[i][2] += Math.Min(dp[i-1][0],dp[i-1][1]);
		}
		return Math.Min(dp[length-1][0],Math.Min(dp[length-1][1],dp[length-1][2]));
	}
	public static void Main()
	{
		int[][] costs = new int[3][]{new int[3]{17,2,17},new int[3]{16,16,5},new int[3]{14,3,19}};
		Console.WriteLine(MinCost(costs));
	}
}
