Given a binary search tree and a node in it, find the in-order successor of that node in the BST.

The successor of a node p is the node with the smallest key greater than p.val.

 

Example 1:

[Picture:https://www.cnblogs.com/grandyang/p/5306162.html]

Input: root = [2,1,3], p = 1
Output: 2
Explanation: 1's in-order successor node is 2. Note that both p and the return value is of TreeNode type.

Example 2:

[Picture:https://www.cnblogs.com/grandyang/p/5306162.html]

Input: root = [5,3,6,2,4,null,null,1], p = 6
Output: null
Explanation: There is no in-order successor of the current node, so the answer is null.
 

Note:

If the given node has no in-order successor in the tree, return null.
It's guaranteed that the values of the tree are unique.

Website:https://dotnetfiddle.net/

using System;					
public class Program
{
	public class TreeNode{
		public int val;
		public TreeNode left;
		public TreeNode right;
		public TreeNode(int x){ val = x;}
	}
	public static TreeNode InorderSuccessor(TreeNode root,TreeNode p)
	{
		if(root==null)return root;
		TreeNode res = null;
		while(root!=null)
		{
			if(root.val<=p.val)root = root.right;
			else {
				res = root;
				root = root.left;
			} 
		}
		return res;
	}
	public static void Main()
	{
		TreeNode root = new TreeNode(2);
		root.left = new TreeNode(1);
		root.right = new TreeNode(3);
		Console.WriteLine(InorderSuccessor(root,new TreeNode(1)).val);
		Console.WriteLine(InorderSuccessor(root,new TreeNode(2)).val);
		Console.WriteLine(InorderSuccessor(root,new TreeNode(3)));
	}
}
